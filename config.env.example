# Hub User Service - Configuration Example
# Copy this file to config.env and update the values for your environment

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# HTTP server port (for health checks, metrics, optional REST API)
HTTP_PORT=localhost:8080

# gRPC server port (primary communication protocol)
GRPC_PORT=localhost:50051

# =============================================================================
# JWT CONFIGURATION (CRITICAL - MUST MATCH MONOLITH)
# =============================================================================

# JWT signing secret - MUST be identical to monolith's MY_JWT_SECRET
# This ensures token compatibility between monolith and microservice
# ⚠️  CRITICAL: Tokens will NOT work across services if secrets differ!
MY_JWT_SECRET=your-super-secret-jwt-key-min-32-chars-recommended

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Option 1: Use individual database connection parameters
DB_HOST=localhost
DB_PORT=5432
DB_NAME=hub_investments
DB_USER=postgres
DB_PASSWORD=postgres
DB_SSLMODE=disable

# Option 2: Use a complete connection string (overrides individual params)
# DATABASE_URL=postgresql://postgres:postgres@localhost:5432/hub_investments?sslmode=disable

# =============================================================================
# REDIS CONFIGURATION (Optional - for future caching)
# =============================================================================

REDIS_HOST=localhost
REDIS_PORT=6379

# =============================================================================
# ENVIRONMENT
# =============================================================================

# Environment: development, staging, production
ENVIRONMENT=development

# =============================================================================
# IMPORTANT NOTES
# =============================================================================

# 1. JWT Secret Compatibility:
#    - The MY_JWT_SECRET MUST match the monolith's secret exactly
#    - Tokens generated by this service will be validated by the monolith
#    - Tokens generated by the monolith will be validated by this service
#    - Any mismatch will cause authentication failures

# 2. Database Configuration:
#    - For Phase 1, this service connects to the SAME database as the monolith
#    - Uses the SAME users table
#    - No data migration required
#    - Future phases may separate databases

# 3. Security Best Practices:
#    - Never commit config.env to version control (it's in .gitignore)
#    - Use strong, random JWT secrets (minimum 32 characters)
#    - Use different secrets for dev/staging/production
#    - Rotate secrets periodically in production
#    - Use environment variables in production deployments

# 4. Local Development:
#    - You can use the default values above for local development
#    - Make sure PostgreSQL is running on localhost:5432
#    - Make sure the hub_investments database exists
#    - Run migrations before starting the service

# 5. Production Deployment:
#    - Never use default values in production
#    - Use strong, unique passwords
#    - Enable SSL for database connections (DB_SSLMODE=require)
#    - Use connection pooling and proper resource limits
#    - Monitor all configuration values
